@charset "utf-8";
@namespace epub "http://www.idpf.org/2007/ops";
/* Readium CSS 
   Config module

   A file allowing implementers to customize flags for reading modes,
   user settings, etc.

   Repo: https://github.com/readium/readium-css */

/* Custom medias
   Syntax: @custom-media --variable (prop: value) */

/* Responsive columns
   The minimum width for which responsive columns (2 -> 1 and vice versa,
   depending on the current font-size) must be enabled */

/* Mobile columns
   The minimum and maximum width for mobile devices.
   We’re forcing the landscape orientation by default,
   and must still investigate large tablets (iPad Pro, Surface Pro 3, etc.). */

/* Custom selectors
   Syntax: @custom-selector :--variable selector
   The selectors you will use for flags/switches
   You can alternatively use classes or custom data-* attributes */

/* User view = paged | scrolled */

/* Font-family override */

/* Advanced settings */

/* Reading Modes */

/* Filters (images) */

/* Accessibility normalization */

/* Accessibility font. You can add selectors, using “, ” as a separator, if you have multiple fonts */

/* Direction i.e. ltr and rtl */

/* Readium CSS 
   Base module

   A minimal stylesheet for all ebooks

   Repo: https://github.com/readium/readium-css */

	 @namespace url("http://www.w3.org/1999/xhtml");

	 @namespace epub url("http://www.idpf.org/2007/ops");
	 
	 @namespace m url("http://www.w3.org/1998/Math/MathML/");
	 
	 @namespace svg url("http://www.w3.org/2000/svg");
	 
	 /* Define viewport, HTML5-style */
	 
	 @-ms-viewport {
		 width: device-width;
	 }
	 
	 @viewport {
		 width: device-width;
		 zoom: 1;
	 }
	 
	 :root {
		 /* Default font-stacks */
		 --RS__oldStyleTf: "Iowan Old Style", "Sitka Text", Palatino, "Book Antiqua", serif;
		 --RS__modernTf: Athelas, Constantia, Georgia, serif;
		 --RS__sansTf: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
		 --RS__humanistTf: Seravek, Calibri, Roboto, Arial, sans-serif;
		 --RS__monospaceTf: "Andale Mono", Consolas, monospace;
	 
		 /* Config */
		 --RS__baseFontFamily: var(--RS__oldStyleTf);
		 
		 /* For square-ish fonts (CJK, Indic, etc.), we must apply some compensation in dynamic leading. Default is 1 i.e. no compensation */
		 --RS__lineHeightCompensation: 1;
	 
		 /* Dynamic leading based on typeface metrics + font-size setting */
		 --RS__baseLineHeight: calc((1em + (2ex - 1ch) - ((1rem - 16px) * 0.1667)) * var(--RS__lineHeightCompensation));
	 }
	 
	 /* Set default font for the html doc, so that it can be overridden by the authors’s stylesheet */
	 
	 html {
		 font-family: var(--RS__baseFontFamily);
		 /* Fallback line-height */
		 line-height: 1.6; /* Fits a little bit better for all languages than 1.5 */
		 line-height: var(--RS__baseLineHeight);
		 text-rendering: optimizeLegibility;
	 }
	 
	 /* 1.5 being too loose with larger font-sizes, we reset headings to normal (which value is 1.125–1.375 for our font-stacks) */
	 
	 h1, h2, h3 {
		 line-height: normal;
	 }
	 
	 :lang(ja),
	 :lang(zh),
	 :lang(ko) {
		 word-wrap: break-word;
		 -webkit-line-break: strict;
		 -epub-line-break: strict;
		 line-break: strict;
	 }
	 
	 /* Set default font for Math */
	 
	 math {
		 font-family: "Latin Modern Math", "STIX Two Math", "XITS Math", "STIX Math", "Libertinus Math", "TeX Gyre Termes Math", "TeX Gyre Bonum Math", "TeX Gyre Schola", "DejaVu Math TeX Gyre", "TeX Gyre Pagella Math", "Asana Math", "Cambria Math", "Lucida Bright Math", "Minion Math", STIXGeneral, STIXSizeOneSym, Symbol, "Times New Roman", serif;
	 }
	 
	 /* Language Overrides
			That will only work if either html or body have a (xml:)lang attribute, not for inline overrides */
	 
	 :lang(am) {
		 --RS__baseFontFamily: Kefa, Nyala, Roboto, Noto, "Noto Sans Ethiopic", serif;
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(ar) {
		 --RS__baseFontFamily: "Geeza Pro", "Arabic Typesetting", Roboto, Noto, "Noto Naskh Arabic", "Times New Roman", serif;
	 }
	 
	 :lang(bn) {
		 --RS__baseFontFamily: "Kohinoor Bangla", "Bangla Sangam MN", Vrinda, Roboto, Noto, "Noto Sans Bengali", sans-serif;
		 --RS__lineHeightCompensation: 1.067;
	 }
	 
	 :lang(bo) {
		 --RS__baseFontFamily: Kailasa, "Microsoft Himalaya", Roboto, Noto, "Noto Sans Tibetan", sans-serif;
	 }
	 
	 :lang(chr) {
		 --RS__baseFontFamily: "Plantagenet Cherokee", Roboto, Noto, "Noto Sans Cherokee";
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(fa) {
		 --RS__baseFontFamily: "Geeza Pro", "Arabic Typesetting", Roboto, Noto, "Noto Naskh Arabic", "Times New Roman", serif;
	 }
	 
	 :lang(gu) {
		 --RS__baseFontFamily: "Gujarati Sangam MN", "Nirmala UI", Shruti, Roboto, Noto, "Noto Sans Gujarati", sans-serif;
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(he) {
		 --RS__baseFontFamily: "New Peninim MT", "Arial Hebrew", Gisha, "Times New Roman", Roboto, Noto, "Noto Sans Hebrew" sans-serif;
		 --RS__lineHeightCompensation: 1.1;
	 }
	 
	 :lang(hi) {
		 --RS__baseFontFamily: "Kohinoor Devanagari", "Devanagari Sangam MN", Kokila, "Nirmala UI", Roboto, Noto, "Noto Sans Devanagari", sans-serif;
	 
		 --RS__lineHeightCompensation: 1.1;
	 }
	 
	 :lang(hy) {
		 --RS__baseFontFamily: Mshtakan, Sylfaen, Roboto, Noto, "Noto Serif Armenian", serif;
	 }
	 
	 :lang(iu) {
		 --RS__baseFontFamily: "Euphemia UCAS", Euphemia, Roboto, Noto, "Noto Sans Canadian Aboriginal", sans-serif;
	 }
	 
	 :lang(ja) {
		 --RS__baseFontFamily: "游ゴシック体", YuGothic, "ヒラギノ丸ゴ", "Hiragino Sans", "Yu Gothic UI", "Meiryo UI", "MS Gothic", Roboto, Noto, "Noto Sans CJK JP", sans-serif;
		 
		 /* For CJK, the line-height is usually 15–20% more than for Latin */
		 --RS__lineHeightCompensation: 1.167;
	 
		 /* Extra variables for Japanese font-stacks as we may want to reuse them for user settings + default */
		 --RS__serif-ja: "ＭＳ Ｐ明朝", "MS PMincho", "Hiragino Mincho Pro", "ヒラギノ明朝 Pro W3", "游明朝", "YuMincho", "ＭＳ 明朝", "MS Mincho", "Hiragino Mincho ProN", serif;
		 --RS__sans-serif-ja: "ＭＳ Ｐゴシック", "MS PGothic", "Hiragino Kaku Gothic Pro W3", "ヒラギノ角ゴ Pro W3", "Hiragino Sans GB", "ヒラギノ角ゴシック W3", "游ゴシック", "YuGothic", "ＭＳ ゴシック", "MS Gothic", "Hiragino Sans", sans-serif;
		 --RS__serif-ja-v: "ＭＳ 明朝", "MS Mincho", "Hiragino Mincho Pro", "ヒラギノ明朝 Pro W3", "游明朝", "YuMincho", "ＭＳ Ｐ明朝", "MS PMincho", "Hiragino Mincho ProN", serif;
		 --RS__sans-serif-ja-v: "ＭＳ ゴシック", "MS Gothic", "Hiragino Kaku Gothic Pro W3", "ヒラギノ角ゴ Pro W3", "Hiragino Sans GB", "ヒラギノ角ゴシック W3", "游ゴシック", "YuGothic", "ＭＳ Ｐゴシック", "MS PGothic", "Hiragino Sans", sans-serif;
	 }
	 
	 :lang(km) {
		 --RS__baseFontFamily: "Khmer Sangam MN", "Leelawadee UI", "Khmer UI", Roboto, Noto, "Noto Sans Khmer", sans-serif;
		 --RS__lineHeightCompensation: 1.067;
	 }
	 
	 :lang(kn) {
		 --RS__baseFontFamily: "Kannada Sangam MN", "Nirmala UI", Tunga, Roboto, Noto, "Noto Sans Kannada", sans-serif;
		 --RS__lineHeightCompensation: 1.1;
	 }
	 
	 :lang(ko) {
		 --RS__baseFontFamily: "Nanum Gothic", "Apple SD Gothic Neo", "Malgun Gothic", Roboto, Noto, "Noto Sans CJK KR", sans-serif;
		 
		 /* For CJK, the line-height is usually 15–20% more than for Latin */
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(lo) {
		 --RS__baseFontFamily: "Lao Sangam MN", "Leelawadee UI", "Lao UI", Roboto, Noto, "Noto Sans Lao", sans-serif;
	 }
	 
	 :lang(ml) {
		 --RS__baseFontFamily: "Malayalam Sangam MN", "Nirmala UI", Kartika, Roboto, Noto, "Noto Sans Malayalam", sans-serif;
		 --RS__lineHeightCompensation: 1.067;
	 }
	 
	 :lang(or) {
		 --RS__baseFontFamily: "Oriya Sangam MN", "Nirmala UI", Kalinga, Roboto, Noto, "Noto Sans Oriya", sans-serif;
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(pa) {
		 --RS__baseFontFamily: "Gurmukhi MN", "Nirmala UI", Kartika, Roboto, Noto, "Noto Sans Gurmukhi", sans-serif;
		 --RS__lineHeightCompensation: 1.1;
	 }
	 
	 :lang(si) {
		 --RS__baseFontFamily: "Sinhala Sangam MN", "Nirmala UI", "Iskoola Pota", Roboto, Noto, "Noto Sans Sinhala", sans-serif;
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(ta) {
		 --RS__baseFontFamily: "Tamil Sangam MN", "Nirmala UI", Latha, Roboto, Noto, "Noto Sans Tamil", sans-serif;
		 --RS__lineHeightCompensation: 1.067;
	 }
	 
	 :lang(te) {
		 --RS__baseFontFamily: "Kohinoor Telugu", "Telugu Sangam MN", "Nirmala UI", Gautami, Roboto, Noto, "Noto Sans Telugu", sans-serif;
	 }
	 
	 :lang(th) {
		 --RS__baseFontFamily: "Thonburi", "Leelawadee UI", "Cordia New", Roboto, Noto, "Noto Sans Thai", sans-serif;
		 --RS__lineHeightCompensation: 1.067;
	 }
	 
	 /* The following will also work for zh-Hans */
	 
	 :lang(zh) {
		 --RS__baseFontFamily: "方体", "PingFang SC", "黑体", "Heiti SC", "Microsoft JhengHei UI", "Microsoft JhengHei", Roboto, Noto, "Noto Sans CJK SC", sans-serif;
	 
		 /* For CJK, the line-height is usually 15–20% more than for Latin */
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(zh-Hant),
	 :lang(zh-TW) {
		 --RS__baseFontFamily: "方體", "PingFang TC", "黑體", "Heiti TC", "Microsoft JhengHei UI", "Microsoft JhengHei", Roboto, Noto, "Noto Sans CJK TC", sans-serif;
		 
		 /* For CJK, the line-height is usually 15–20% more than for Latin */
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 :lang(zh-HK) {
		 --RS__baseFontFamily: "方體", "PingFang HK", "方體", "PingFang TC", "黑體", "Heiti TC", "Microsoft JhengHei UI", "Microsoft JhengHei", Roboto, Noto, "Noto Sans CJK TC", sans-serif;
		 
		 /* For CJK, the line-height is usually 15–20% more than for Latin */
		 --RS__lineHeightCompensation: 1.167;
	 }
	 
	 /* Readium CSS 
			Day/Default mode
	 
			A preset theme for day mode, which is the default
	 
			Repo: https://github.com/readium/readium-css */
	 
	 /* CONFIG */
	 
	 :root {
		 --RS__backgroundColor: #FFFFFF;
		 --RS__textColor: #121212;
	 
		 /* This can be customized but initial will re-use default value of the browser */
		 --RS__selectionBackgroundColor: #b4d8fe;
		 --RS__selectionTextColor: inherit;
	 }
	 
	 :root {
		 color: var(--RS__textColor) !important;
		 background-color: var(--RS__backgroundColor) !important;
	 }
	 
	 /* Note: Though `::selection` was present in drafts of CSS Selectors Level 3, it was removed during the Candidate Recommendation phase because its behavior was under-specified (especially with nested elements) and interoperability wasn’t achieved. Source: https://developer.mozilla.org/en-US/docs/Web/CSS/::selection */
	 
	 ::-moz-selection {
		 color: var(--RS__selectionTextColor);
		 background-color: var(--RS__selectionBackgroundColor);
	 }
	 
	 ::selection {
		 color: var(--RS__selectionTextColor);
		 background-color: var(--RS__selectionBackgroundColor);
	 }
	 
	 /* Readium CSS 
			Fonts module
	 
			A stylesheet for embedded fonts
	 
			Repo: https://github.com/readium/readium-css */
	 
	 /* /!\ Mind the path (relative to the folders in which you have stylesheets and the fonts) */
	 
	 @font-face {
		 font-family: AccessibleDfA;
		 font-style: normal;
		 font-weight: normal;
		 src: local("AccessibleDfA"),
			 url("fonts/AccessibleDfA.otf") format("opentype");
	 }
	 
	 @font-face {
		 font-family: "IA Writer Duospace";
		 font-style: normal;
		 font-weight: normal;
		 src: local("iAWriterDuospace-Regular"),
			 url("fonts/iAWriterDuospace-Regular.ttf") format("truetype");
	 }
	 
	 /* If you have different weights/styles, 
			use `font-weight` and `font-style`, 
			not prefixes in the font-family name, 
			or else it will be a nightmare to manage in user settings. */
	 
	 /* Readium CSS 
			HTML5 SR Patch stylesheet
	 
			A set of style to adjust HTML5 Suggested Rendering to paginated content
	 
			Repo: https://github.com/readium/readium-css */
	 
	 /* Fragmentation */
	 
	 body {
		 widows: 2;
		 orphans: 2;
	 }
	 
	 figcaption, th, td {
		 widows: 1;
		 orphans: 1;
	 }
	 
	 h2, h3, h4, h5, h6, dt,
	 hr, caption {
		 -webkit-column-break-after: avoid;
		 page-break-after: avoid;
		 break-after: avoid;
	 }
	 
	 h1, h2, h3, h4, h5, h6, dt, 
	 figure, tr {
		 -webkit-column-break-inside: avoid;
		 page-break-inside: avoid;
		 break-inside: avoid;
	 }
	 
	 /* Hyphenation */
	 
	 body {
		 -webkit-hyphenate-character: "\002D";
		 -moz-hyphenate-character: "\002D";
		 -ms-hyphenate-character: "\002D";
		 hyphenate-character: "\002D";
		 -webkit-hyphenate-limit-lines: 3;
		 -ms-hyphenate-limit-lines: 3;
		 hyphenate-limit-lines: 3;
	 }
	 
	 h1, h2, h3, h4, h5, h6, dt,
	 figcaption, pre, caption, address,
	 center, code, var {
		 -ms-hyphens: none;
		 -moz-hyphens: none;
		 -webkit-hyphens: none;
		 -epub-hyphens: none;
		 hyphens: none;
	 }
	 
	 /* OTF */
	 
	 body {
		 font-variant-numeric: oldstyle-nums proportional-nums;
	 }
	 
	 :lang(ja) body,
	 :lang(zh) body,
	 :lang(ko) body {
		 font-variant-numeric: lining-nums proportional-nums;
	 }
	 
	 h1, h2, h3, h4, h5, h6, dt {
		 font-variant-numeric: lining-nums proportional-nums;
	 }
	 
	 table {
		 font-variant-numeric: lining-nums tabular-nums;
	 }
	 
	 code, var {
		 font-variant-ligatures: none;
		 font-variant-numeric: lining-nums tabular-nums slashed-zero;
	 }
	 
	 rt {
		 font-variant-east-asian: ruby;
	 }
	 
	 :lang(ar) {
		 font-variant-ligatures: common-ligatures;
	 }
	 
	 :lang(ko) {
		 font-kerning: normal;
	 }
	 
	 /* Night mode */
	 
	 hr {
		 color: inherit;
		 border-color: currentColor;
	 }
	 
	 table, th, td {
		 border-color: currentColor;
	 }
	 
	 /* Horizontal Spacing */
	 
	 figure, blockquote {
		 margin: 1em 5%;
	 }
	 
	 /* 
	 
	 :lang(ja) figure, :lang(ja) blockquote,
	 :lang(zh-Hant) figure, :lang(zh-Hant) blockquote,
	 :lang(zh-TW) figure, :lang(zh-TW) blockquote,
	 :lang(mn) figure, :lang(mn) blockquote {
		 margin: 5% 1em;  
	 }
	 
	 */
	 
	 ul, ol {
		 padding-left: 5%;
	 }
	 
	 /* 
	 
	 :lang(ja) ul, :lang(ja) ol,
	 :lang(zh-Hant) ul, :lang(zh-Hant) ol,
	 :lang(zh-TW) ul, :lang(zh-TW) ol,
	 :lang(mn) ul, :lang(mn) ol   {
		 padding-top: 5%;  
	 }
	 
	 */
	 
	 dd {
		 margin-left: 5%;
	 }
	 
	 /* 
	 
	 :lang(ja) dd,
	 :lang(zh-Hant) dd,
	 :lang(zh-TW) dd, 
	 :lang(mn) dd {
		 margin-top: 5%;  
	 }
	 
	 */
	 
	 pre {
		 white-space: pre-wrap;
		 -ms-tab-size: 2;
		 -moz-tab-size: 2;
		 -webkit-tab-size: 2;
		 tab-size: 2;
	 }
	 
	 /* Normalization */
	 
	 abbr[title], acronym[title] {
		 text-decoration: dotted underline;
	 }
	 
	 nobr wbr {
		 white-space: normal;
	 }
	 
	 /* Make ruby text and parentheses non-selectable (TBC) */
	 
	 ruby > rt, ruby > rp {
		 -webkit-user-select: none;
		 -moz-user-select: none;
		 -ms-user-select: none;
		 user-select: none;
	 }
	 
	 /* Internationalization */
	 
	 *:lang(ja),
	 *:lang(zh),
	 *:lang(ko),
	 :lang(ja) cite, :lang(ja) dfn, :lang(ja) em, :lang(ja) i,  
	 :lang(zh) cite, :lang(zh) dfn, :lang(zh) em, :lang(zh) i,
	 :lang(ko) cite, :lang(ko) dfn, :lang(ko) em, :lang(ko) i {
		 font-style: normal;
	 }
	 
	 :lang(ja) a,  
	 :lang(zh) a,
	 :lang(ko) a {
		 text-decoration: none;
	 }
	 
	 /* Readium CSS 
			Safeguards module
	 
			A set of styles to prevent common issues in pagination
	 
			Repo: https://github.com/readium/readium-css */
	 
	 /* Config */
	 
	 /* We’ll be using an "RS__" prefix so that we can prevent collisions with authors’ CSS */
	 
	 :root {
		 /* max-width for media, you can override that via JS if not compiled to static */
		 --RS__maxMediaWidth: 100%;
	 
		 /* max-height for media, you can override that via JS if not compiled to static 
				Please consider figures might have a figcaption, which is why 95vh in the first place */
		 --RS__maxMediaHeight: 95vh;
	 
		 /* value for medias’ box-sizing */
		 --RS__boxSizingMedia: border-box;
	 
		 /* value for table’s box-sizing */
		 --RS__boxSizingTable: border-box;
	 }
	 
	 /* Sanitize line-heights in webkit e.g. raised cap without a declared line-height
			See effect by checking this demo in Safari: https://codepen.io/JayPanoz/pen/gRmzrE
			Note: glyphs has to be reset to inline for CJK */
	 
	 html {
		 -webkit-line-box-contain: block glyphs replaced;
	 }
	 
	 :lang(ja) {
		 -webkit-line-box-contain: block inline replaced;
	 }
	 
	 /* Wrap long strings if larger than line-length */
	 
	 a, h1, h2, h3, h4, h5, h6 {
		 word-wrap: break-word;
	 }
	 
	 div {
		 max-width: var(--RS__maxMediaWidth);
	 }
	 
	 /* Size medias */
	 
	 /* You can override CSS variables by re-defining it for all elements or a specific one */
	 
	 img, svg, audio, video {
	 
		 /* Object-fit allows us to keep the correct aspect-ratio */
		 object-fit: contain;
	 
		 width: auto;
		 height: auto;
	 
		 /* Some files don’t have max-width */
		 max-width: var(--RS__maxMediaWidth);
	 
		 /* We’re setting a max-height, especially for covers */
		 max-height: var(--RS__maxMediaHeight) !important;
		 /* We probably don’t need to use modern box-sizing as auto behaves like it */
		 box-sizing: var(--RS__boxSizingMedia);
	 
		 /* For page-break, we must use those 3
				We can’t use a variable there, webkit seems to no support them for those properties */
		 -webkit-column-break-inside: avoid;
		 page-break-inside: avoid;
		 break-inside: avoid;
	 }
	 
	 /* Try preventing border being cut-off, webkit + blink have content-box by default */
	 
	 table {
		 max-width: var(--RS__maxMediaWidth);
		 box-sizing: var(--RS__boxSizingTable);
	 }
	 /*# sourceMappingURL=ReadiumCSS-before.css.map */

body{
	hyphens: auto;
	-epub-hyphens: auto;
}

p{
	margin: 0;
	text-indent: 1em;
}

hr{
	border: none;
	border-top: 1px solid;
	height: 0;
	margin: 1.5em auto;
	width: 25%;
}

q::before,
q::after{
	content: "";
}

h1,
h2,
h3,
h4,
h5,
h6{
	font-variant: small-caps;
	hyphens: none;
	-epub-hyphens: none;
	page-break-after: avoid;
	page-break-inside: avoid;
	text-align: center;
	margin: 3em 0;
}

blockquote + p,
h2 + p,
h3 + p,
h4 + p,
h5 + p,
h6 + p,
header + p,
hr + p,
ol + p,
ul + p,
table + p,
p:first-child{
	text-indent: 0;
}

cite{
	font-style: normal;
}

abbr{
	border: none;
	white-space: nowrap;
}

blockquote cite{
	display: block;
	font-style: italic;
	text-align: right;
}

blockquote cite i{
	font-style: normal;
}

b,
strong{
	font-variant: small-caps;
	font-weight: normal;
}

header{
	page-break-inside: avoid;
	text-align: center;
}

article > header + *,
section > header + *{
	margin-top: 3em;
}

section[epub|type~="titlepage"] img{
	display: block;
	width: 100%;
	margin: 3em auto auto auto;
}

a[epub|type~="noteref"]{
	font-size: .75em;
	vertical-align: super;
}

section[epub|type~="endnotes"] > ol > li{
	margin: 1em 0;
}

section[epub|type~="colophon"],
section[epub|type~="imprint"]{
	text-align: center;
}

section[epub|type~="colophon"] header,
section[epub|type~="imprint"] header{
	line-height: 0;
	margin-top: 3em;
}

section[epub|type~="colophon"] h2,
section[epub|type~="imprint"] h2{
	display: none;
}

img[epub|type~="z3998:publisher-logo"]{
	max-width: 25%;
}

section[epub|type~="colophon"] p,
section[epub|type~="imprint"] p{
	margin: 1em auto 0 auto;
	text-indent: 0;
}

section[epub|type~="imprint"] p{
	font-size: .75em;
	text-align: justify;
	width: 75%;
}

section[epub|type~="colophon"] p + p::before{
	border-top: 1px solid;
	content: "";
	display: block;
	margin: auto auto 1em auto;
	width: 25%;
}

section[epub|type~="colophon"] a{
	font-variant: small-caps;
}

section[epub|type~="imprint"] a,
section[epub|type~="colophon"] a{
	hyphens: none;
	-epub-hyphens: none;
}

section[epub|type~="copyright-page"] p{
	margin: 1em auto;
	text-indent: 0;
}

section[epub|type~="copyright-page"] blockquote p{
	font-style: italic;
	text-align: left;
	text-indent: 0;
}

section[epub|type~="copyright-page"] blockquote p span{
	display: block;
	padding-left: 1em;
	text-indent: -1em;
}

section[epub|type~="copyright-page"] blockquote br{
	display: none;
}

@supports(display: flex){
	section[epub|type~="imprint"]{
		align-content: center;
		display: flex;
		flex-direction: column;
		justify-content: center;
		min-height: calc(98vh - 3em);
		padding-top: 3em;
	}

	section[epub|type~="imprint"] header{
		margin-bottom: 2em;
		margin-top: 0;
	}

	img[epub|type~="z3998:publisher-logo"]{
		max-width: 25vw;
	}
}

/* Readium CSS 
   Config module

   A file allowing implementers to customize flags for reading modes,
   user settings, etc.

   Repo: https://github.com/readium/readium-css */

/* Custom medias
   Syntax: @custom-media --variable (prop: value) */

/* Responsive columns
   The minimum width for which responsive columns (2 -> 1 and vice versa,
   depending on the current font-size) must be enabled */

/* Mobile columns
   The minimum and maximum width for mobile devices.
   We’re forcing the landscape orientation by default,
   and must still investigate large tablets (iPad Pro, Surface Pro 3, etc.). */

/* Custom selectors
   Syntax: @custom-selector :--variable selector
   The selectors you will use for flags/switches
   You can alternatively use classes or custom data-* attributes */

/* User view = paged | scrolled */

/* Font-family override */

/* Advanced settings */

/* Reading Modes */

/* Filters (images) */

/* Accessibility normalization */

/* Accessibility font. You can add selectors, using “, ” as a separator, if you have multiple fonts */

/* Direction i.e. ltr and rtl */

/* @import "modules/ReadiumCSS-pagination.css"; */

/* Readium CSS 
   Scroll module

   A set of styles to scroll ePublications
   This module overrides pagination

   Repo: https://github.com/readium/readium-css */

	 :root[style*="readium-scroll-on"] {
  
		/* Reset columns, auto + auto = columns can’t be created */
		-webkit-columns: auto auto !important;
		-moz-columns: auto auto !important;
		columns: auto auto !important;
		width: auto !important;
		height: auto !important;
		max-width: none !important;
		max-height: none !important;
		/* Reset html size so that the user can scroll */
		min-width: 0 !important;
		min-height: 0 !important;  
	}
	
	/* Make sure line-length is limited in all configs */
	
	:root[style*="readium-scroll-on"] body {
		--RS__maxLineLength: 40rem !important; 
	
		margin-top: var(--RS__pageGutter) !important;
		margin-bottom: var(--RS__pageGutter) !important;
	}
	
	/* Scroll mode horizontal */
	
	/* Vertical writing needs body height set */
	
	/* Do we add a top/bottom margin for body in vertical scroll or not? */
	
	/* Readium CSS 
		 Default highlights
	
		 A stylesheet for user highlights
	
		 Repo: https://github.com/readium/readium-css */
	
	/* User Highlights */
	
	.readiumCSS-yellow-highlight {
		background-color: rgba(255, 255, 0, 0.5);
	}
	
	.readiumCSS-green-highlight {
		background-color: rgba(0, 255, 0, 0.5);
	}
	
	.readiumCSS-orange-highlight {
		background-color: rgba(255, 165, 0, 0.5);
	}
	
	.readiumCSS-pink-highlight {
		background-color: rgba(255, 105, 180, 0.5);
	}
	
	/* Media overlays */
	
	.readiumCSS-mo-active-default {
		color: black !important;
		background-color: yellow !important;
	}
	
	/* Readium CSS 
		 Night mode
	
		 A preset theme for night mode
	
		 Repo: https://github.com/readium/readium-css */
	
	/* CONFIG */
	
	/* [style*="--USER__appearance"] can be used to increase specificity but performance hit */
	
	:root[style*="readium-night-on"] {
		--RS__backgroundColor: #000000;
		--RS__textColor: #FEFEFE;
	
		--RS__linkColor: #63caff;
		--RS__visitedColor: #0099E5;
	
		/* This can be customized but initial will re-use default value of the browser */
		--RS__selectionBackgroundColor: #b4d8fe;
		--RS__selectionTextColor: inherit;
	}
	
	/* we don’t need to redeclare bg-color and color for :root since we will inherit and update from day/default mode */
	
	:root[style*="readium-night-on"] *:not(a) {
		color: inherit !important;
		background-color: transparent !important;
		border-color: currentColor !important;
	}
	
	:root[style*="readium-night-on"] svg text {
		fill: currentColor !important;
		stroke: none !important;
	}
	
	:root[style*="readium-night-on"] a:link,
	:root[style*="readium-night-on"] a:link * {
		color: var(--RS__linkColor) !important;
	}
	
	:root[style*="readium-night-on"] a:visited,
	:root[style*="readium-night-on"] a:visited * {
		color: var(--RS__visitedColor) !important;
	}
	
	:root[style*="readium-night-on"] img[class*="gaiji"],
	:root[style*="readium-night-on"] *[epub\:type~="titlepage"] img:only-child {
		-webkit-filter: invert(100%);
		filter: invert(100%);
	}
	
	/* Darken all images on user’s demand */
	
	:root[style*="readium-night-on"][style*="readium-darken-on"] img {
		-webkit-filter: brightness(80%);
		filter: brightness(80%);
	}
	
	/* Invert all images on user’s demand */
	
	:root[style*="readium-night-on"][style*="readium-invert-on"] img {
		-webkit-filter: invert(100%);
		filter: invert(100%);
	}
	
	/* Darken and invert on user’s demand */
	
	:root[style*="readium-night-on"][style*="readium-darken-on"][style*="readium-invert-on"] img {
		-webkit-filter: brightness(80%) invert(100%);
		filter: brightness(80%) invert(100%);
	}
	
	/* Readium CSS 
		 Sepia mode
	
		 A preset theme for sepia mode
	
		 Repo: https://github.com/readium/readium-css */
	
	/* CONFIG */
	
	:root[style*="readium-sepia-on"] {
		--RS__backgroundColor: #faf4e8;
		--RS__textColor: #121212;
	
		--RS__linkColor: #0000EE;
		--RS__visitedColor: #551A8B;
	
		/* This can be customized but initial will re-use default value of the browser */
		--RS__selectionBackgroundColor: #b4d8fe;
		--RS__selectionTextColor: inherit;
	
		--RS__maxLineLength: 40.01rem; /* Forcing a reflow in Blink/Webkit so that blend mode can work */
	}
	
	/* we don’t need to redeclare bg-color and color for :root since we will inherit and update from day/default mode */
	
	:root[style*="readium-sepia-on"] body {
		/* Should be transparent but Chrome bug https://bugs.chromium.org/p/chromium/issues/detail?id=711955&q=mix-blend-mode&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified */
	
		color: inherit;
		background-color: var(--RS__backgroundColor);
	}
	
	:root[style*="readium-sepia-on"] a:link,
	:root[style*="readium-sepia-on"] a:link * {
		color: var(--RS__linkColor);
	}
	
	:root[style*="readium-sepia-on"] a:visited,
	:root[style*="readium-sepia-on"] a:visited * {
		color: var(--RS__visitedColor);
	}
	
	:root[style*="readium-sepia-on"] svg,
	:root[style*="readium-sepia-on"] img {
		/* Make sure the proper bg-color is used for the blend mode */
		background-color: transparent !important;
		mix-blend-mode: multiply;
	}
	
	/* Readium CSS 
		 OS Accessibility Modes
	
		 A stylesheet to deal with OS accessibility settings
	
		 Repo: https://github.com/readium/readium-css */
	
	/* Windows high contrast colors are mapped to CSS system color keywords
		 See http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast */
	
	@media screen and (-ms-high-contrast: active) {
		:root {
			color: windowText !important;
			background-color: window !important;
		}
	
		/* The following selectors are super funky but it makes sure everything is inherited, this is indeed critical for this mode */
		:root :not(#\#):not(#\#):not(#\#),
		:root :not(#\#):not(#\#):not(#\#) :not(#\#):not(#\#):not(#\#)
		:root :not(#\#):not(#\#):not(#\#) :not(#\#):not(#\#):not(#\#) :not(#\#):not(#\#):not(#\#) {
			color: inherit !important;
			background-color: inherit !important;
		}
	
		.readiumCSS-mo-active-default {
			color: highlightText !important;
			background-color: highlight !important;
		}
	
		/* For links, hyperlink keyword is automatically set */
	
		/* Should we also set user highlights? */
	}
	
	@media screen and (-ms-high-contrast: white-on-black) {
		:root[style*="readium-night-on"] img[class*="gaiji"],
		:root[style*="readium-night-on"] *[epub\:type~="titlepage"] img:only-child {
			-webkit-filter: none !important;
			filter: none !important;
		}
		:root[style*="readium-night-on"][style*="readium-invert-on"] img {
			-webkit-filter: none !important;
			filter: none !important;
		}
		:root[style*="readium-night-on"][style*="readium-darken-on"][style*="readium-invert-on"] img {
			-webkit-filter: brightness(80%);
			filter: brightness(80%);
		}
	}
	
	/* Will be true on recent versions of iOS and MacOS if inverted setting enabled by the user */
	
	@media screen and (inverted-colors) {
		:root[style*="readium-night-on"] img[class*="gaiji"],
		:root[style*="readium-night-on"] *[epub\:type~="titlepage"] img:only-child {
			-webkit-filter: none !important;
			filter: none !important;
		}
		:root[style*="readium-night-on"][style*="readium-invert-on"] img {
			-webkit-filter: none !important;
			filter: none !important;
		}
		:root[style*="readium-night-on"][style*="readium-darken-on"][style*="readium-invert-on"] img {
			-webkit-filter: brightness(80%);
			filter: brightness(80%);
		}
	}
	
	@media screen and (monochrome) {
		/* Grayscale (Implemented in Safari, what about eInk?) */
		/* Must deal with anything color (contrast) so must be managed at the night/sepia/theme level :( */
	}
	
	@media screen and (prefers-reduced-motion) {
		/* If reduced motion is set on MacOS, in case we have animation/transition */
	}
	
	/* Readium CSS 
		 Columns number pref
	
		 A submodule managing columns number for user settings
		 Part of “Chrome Advanced” class – no flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	/* Number of columns = 1 | 2 */
	
	/* We still need to see if we allow users to force number of columns for all configs, currently it behaves as an "auto" setting */
	
	/* apply col setting except for mobile portrait */
	
	@media screen and (min-width: 60em), screen and (min-device-width: 36em) and (max-device-width: 47em) and (orientation: landscape) {
		:root[style*="--USER__colCount: 1"],
		:root[style*="--USER__colCount:1"],
		:root[style*="--USER__colCount: 2"],
		:root[style*="--USER__colCount:2"] {
			-webkit-column-count: var(--USER__colCount);
			-moz-column-count: var(--USER__colCount);
			column-count: var(--USER__colCount);
		}
	
		/* If one column, make sure we limit line-length */
		:root[style*="--USER__colCount: 1"],
		:root[style*="--USER__colCount:1"] {
			--RS__maxLineLength: 40rem !important; /* This is the only way for the user setting to work in webkit… */
			--RS__colWidth: 100vw;
		}
	
		/* If smartphone landscape, and 2 columns, col width the same as iPad landscape + desktop */
		:root[style*="--USER__colCount: 2"],
		:root[style*="--USER__colCount:2"] {
			--RS__colWidth: auto; /* User explicitely tells he/she wants 2 columns, we reset floor value */
		}
	}
	
	/* Readium CSS 
		 Page margins pref
	
		 A submodule managing page margins for user settings
		 Part of “Chrome Advanced” class – no flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	/* Page Margins: the user margin is a factor of the page gutter e.g. 0.5, 0.75, 1, 1.25, 1.5, etc. */
	
	:root[style*="--USER__pageMargins"] body {
		padding: 0 calc(var(--RS__pageGutter) * var(--USER__pageMargins)) !important;
	}
	
	/* Readium CSS 
		 Custom colors pref
	
		 A submodule managing custom colors for user settings
		 Part of “Chrome Advanced” class – no flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="--USER__backgroundColor"] {
		background-color: var(--USER__backgroundColor) !important;
	}
	
	:root[style*="--USER__backgroundColor"] * {
		background-color: transparent !important;
	}
	
	:root[style*="--USER__textColor"] {
		color: var(--USER__textColor) !important;
	}
	
	:root[style*="--USER__textColor"] *:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(pre) {
		color: inherit !important;
	}
	
	/* Readium CSS 
		 Text align pref
	
		 A submodule managing text-align for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-advanced-on"][style*="--USER__textAlign"] {
		text-align: var(--USER__textAlign);
	}
	
	:root[style*="readium-advanced-on"][style*="--USER__textAlign"] body,
	:root[style*="readium-advanced-on"][style*="--USER__textAlign"] *:not(blockquote):not(figcaption) p,
	:root[style*="readium-advanced-on"][style*="--USER__textAlign"] li {
		text-align: inherit !important;
		-moz-text-align-last: auto !important;
		-epub-text-align-last: auto !important;
		text-align-last: auto !important;
	}
	
	/* In case something goes wrong at the programmatic level + rtl for body + rtl in ltr */
	
	:root[style*="readium-advanced-on"][dir="rtl"][style*="--USER__textAlign: left"],
	:root[style*="readium-advanced-on"][dir="rtl"][style*="--USER__textAlign:left"],
	:root[style*="readium-advanced-on"][style*="--USER__textAlign: left"] *[dir="rtl"],
	:root[style*="readium-advanced-on"][style*="--USER__textAlign:left"] *[dir="rtl"] {
		text-align: right;
	}
	
	/* Edge, if logical value is used, think of it as a polyfill. For LTR, it will fall back to the default, which is left */
	
	:root[style*="readium-advanced-on"][dir="rtl"][style*="--USER__textAlign: start"],
	:root[style*="readium-advanced-on"][dir="rtl"][style*="--USER__textAlign:start"] {
		text-align: right;
	}
	
	/* Readium CSS 
		 Hyphenation pref
	
		 A submodule managing hyphens for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	/* Managing hyphenation automatically for text-align values */
	
	:root[style*="readium-advanced-on"][style*="--USER__textAlign: justify"] body,
	:root[style*="readium-advanced-on"][style*="--USER__textAlign:justify"] body {
		-webkit-hyphens: auto;
		-moz-hyphens: auto;
		-ms-hyphens: auto;
		-epub-hyphens: auto;
		hyphens: auto;
	}
	
	:root[style*="readium-advanced-on"][style*="--USER__textAlign: left"] body,
	:root[style*="readium-advanced-on"][style*="--USER__textAlign:left"] body,
	:root[style*="readium-advanced-on"][style*="--USER__textAlign: right"] body,
	:root[style*="readium-advanced-on"][style*="--USER__textAlign:right"] body {
		-webkit-hyphens: none;
		-moz-hyphens: none;
		-ms-hyphens: none;
		-epub-hyphens: none;
		hyphens: none;
	}
	
	/* Managing the user override */
	
	:root[style*="readium-advanced-on"][style*="--USER__bodyHyphens"] {
		-webkit-hyphens: var(--USER__bodyHyphens) !important;
		-moz-hyphens: var(--USER__bodyHyphens) !important;
		-ms-hyphens: var(--USER__bodyHyphens) !important;
		-epub-hyphens: var(--USER__bodyHyphens) !important;
		hyphens: var(--USER__bodyHyphens) !important;
	}
	
	/* Sorry, we can’t use `:matches`, `:-moz-any` or `:-webkit-any` because MS doesn’t support it yet */
	
	:root[style*="readium-advanced-on"][style*="--USER__bodyHyphens"] body,
	:root[style*="readium-advanced-on"][style*="--USER__bodyHyphens"] p,
	:root[style*="readium-advanced-on"][style*="--USER__bodyHyphens"] li,
	:root[style*="readium-advanced-on"][style*="--USER__bodyHyphens"] div,
	:root[style*="readium-advanced-on"][style*="--USER__bodyHyphens"] dd {
		-webkit-hyphens: inherit;
		-moz-hyphens: inherit;
		-ms-hyphens: inherit;
		-epub-hyphens: inherit;
		hyphens: inherit;
	}
	
	/* Readium CSS 
		 Font Family pref
	
		 A submodule managing font-family for user settings
		 Part of “User Overrides” class – “font override” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] {
		font-family: var(--USER__fontFamily) !important;
	}
	
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] body,
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] p,
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] li,
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] div,
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] dt,
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] dd {
		font-family: inherit !important;
	}
	
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] i:not([lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] i:not([xml\:lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] em:not([lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] em:not([xml\:lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] cite:not([lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] cite:not([xml\:lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] b:not([lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] b:not([xml\:lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] strong:not([lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] strong:not([xml\:lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] span:not([lang]),
	:root[style*="readium-font-on"][style*="--USER__fontFamily"] span:not([xml\:lang]) {
		font-family: inherit !important;
	}
	
	/* Readium CSS 
		 A11y font pref
	
		 A submodule managing a11y text normalization for user settings
		 Part of “User Overrides” class – “font override” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	/* For AccessibleDfA, we need to normalize font-weight and font-style since only the normal style is available */
	
	:root[style*="readium-font-on"][style*="AccessibleDfA"] {
		/* We won’t use the variable there since we need fallbacks for missing characters */
		font-family: AccessibleDfA, Verdana, Tahoma, "Trebuchet MS", sans-serif !important;
		--RS__lineHeightCompensation: 1.167;
	}
	
	:root[style*="readium-font-on"][style*="IA Writer Duospace"] {
		/* We won’t use the variable there since we need fallbacks for missing characters */
		font-family: "IA Writer Duospace", Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", Courier, monospace !important;
		--RS__lineHeightCompensation: 1.167;
	}
	
	:root[style*="readium-font-on"][style*="readium-a11y-on"] {
		font-family: var(--USER__fontFamily) !important;
		--RS__lineHeightCompensation: 1.167;
	}
	
	/* Maybe users want a setting to normalize any font offered so there is a “a11y Normalize” flag for it */
	
	:root[style*="readium-font-on"][style*="AccessibleDfA"],
	:root[style*="readium-font-on"][style*="IA Writer Duospace"],
	:root[style*="readium-font-on"][style*="readium-a11y-on"] {
		font-style: normal !important;
		font-weight: normal !important;
	}
	
	/* Targeting everything except code. Note that Open Dyslexic has a monospaced font for code */
	
	:root[style*="readium-font-on"][style*="AccessibleDfA"] *:not(code):not(var):not(kbd):not(samp),
	:root[style*="readium-font-on"][style*="IA Writer Duospace"] *:not(code):not(var):not(kbd):not(samp),
	:root[style*="readium-font-on"][style*="readium-a11y-on"] *:not(code):not(var):not(kbd):not(samp) {
		font-family: inherit !important;
		font-style: inherit !important;
		font-weight: inherit !important;
	}
	
	/* Normalizing text-decoration, subs and sups */
	
	:root[style*="readium-font-on"][style*="AccessibleDfA"] *,
	:root[style*="readium-font-on"][style*="IA Writer Duospace"] *,
	:root[style*="readium-font-on"][style*="readium-a11y-on"] * {
		text-decoration: none !important;
		font-variant-caps: normal !important;
		font-variant-numeric: normal !important;
		font-variant-position: normal !important;
	}
	
	:root[style*="readium-font-on"][style*="AccessibleDfA"] sup,
	:root[style*="readium-font-on"][style*="IA Writer Duospace"] sup,
	:root[style*="readium-font-on"][style*="readium-a11y-on"] sup,
	:root[style*="readium-font-on"][style*="AccessibleDfA"] sub,
	:root[style*="readium-font-on"][style*="IA Writer Duospace"] sub,
	:root[style*="readium-font-on"][style*="readium-a11y-on"] sub {
		font-size: 1rem !important;
		vertical-align: baseline !important;
	}
	
	/* Readium CSS 
		 Font size pref
	
		 A submodule managing font-size for user settings
		 Part of “User Overrides” class – no flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="--USER__fontSize"] {
		font-size: var(--USER__fontSize) !important;
	}
	
	/* Readium CSS 
		 Line height pref
	
		 A submodule managing line-height for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-advanced-on"][style*="--USER__lineHeight"] {
		line-height: var(--USER__lineHeight) !important;
	}
	
	:root[style*="readium-advanced-on"][style*="--USER__lineHeight"] body,
	:root[style*="readium-advanced-on"][style*="--USER__lineHeight"] p,
	:root[style*="readium-advanced-on"][style*="--USER__lineHeight"] li,
	:root[style*="readium-advanced-on"][style*="--USER__lineHeight"] div {
		line-height: inherit;
	}
	
	/* Readium CSS 
		 Para spacing pref
	
		 A submodule managing paragraphs’ top and bottom margins for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-advanced-on"][style*="--USER__paraSpacing"] p {
		margin-top: var(--USER__paraSpacing) !important;
		margin-bottom: var(--USER__paraSpacing) !important;
	}
	
	/* Readium CSS 
		 Para indent pref
	
		 A submodule managing paragraphs’ text-indent for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-advanced-on"][style*="--USER__paraIndent"] p {
		text-indent: var(--USER__paraIndent) !important;
	}
	
	/* If there are inline-block elements in paragraphs, text-indent will inherit so we must reset it */
	
	:root[style*="readium-advanced-on"][style*="--USER__paraIndent"] p *,
	:root[style*="readium-advanced-on"][style*="--USER__paraIndent"] p:first-letter {
		text-indent: 0 !important;
	}
	
	/* Readium CSS 
		 Word spacing pref
	
		 A submodule managing word-spacing for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] h1,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] h2,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] h3,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] h4,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] h5,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] h6,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] p,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] li,
	:root[style*="readium-advanced-on"][style*="--USER__wordSpacing"] div {
		word-spacing: var(--USER__wordSpacing);
	}
	
	/* Readium CSS 
		 Letter spacing pref
	
		 A submodule managing letter-spacing for user settings
		 Part of “User Overrides Advanced” class – “advanced settings” flag required.
	
		 Repo: https://github.com/readium/readium-css */
	
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] h1,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] h2,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] h3,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] h4,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] h5,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] h6,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] p,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] li,
	:root[style*="readium-advanced-on"][style*="--USER__letterSpacing"] div {
		letter-spacing: var(--USER__letterSpacing);
		font-variant: none;
	}
	
	/* Readium CSS 
		 Font size normalize
	
		 A stylesheet to normalize font-size
	
		 Repo: https://github.com/readium/readium-css */
	
	/* STYLES */
	
	/* :root is used so that you can quickly add a class or attribute if you prefer e.g. `:root[data-rs-normalize]` */
	
	/* We create a default so that you don’t need to explicitly set one in the DOM.
		 Once the “Publisher’s styles” checkbox is unchecked, the normalize is applied automatically */
	
	:root[style*="readium-advanced-on"] {
		--USER__typeScale: 1.2; /* This is the default type scale you’ll find in most publications */
	}
	
	:root[style*="readium-advanced-on"] p,
	:root[style*="readium-advanced-on"] li,
	:root[style*="readium-advanced-on"] div,
	:root[style*="readium-advanced-on"] pre,
	:root[style*="readium-advanced-on"] dd {
		font-size: 1rem !important;
	}
	
	:root[style*="readium-advanced-on"] h1 {
		/* Fallback if browser doesn’t support vars */
		font-size: 1.75rem !important;
		font-size: calc(((1rem * var(--USER__typeScale)) * var(--USER__typeScale)) * var(--USER__typeScale)) !important;
	}
	
	:root[style*="readium-advanced-on"] h2 {
		/* Fallback if browser doesn’t support vars */
		font-size: 1.5rem !important;
		font-size: calc((1rem * var(--USER__typeScale)) * var(--USER__typeScale)) !important;
	}
	
	:root[style*="readium-advanced-on"] h3 {
		/* Fallback if browser doesn’t support vars */
		font-size: 1.25rem !important;
		font-size: calc(1rem * var(--USER__typeScale)) !important;
	}
	
	:root[style*="readium-advanced-on"] h4,
	:root[style*="readium-advanced-on"] h5,
	:root[style*="readium-advanced-on"] h6 {
		font-size: 1rem !important;
	}
	
	:root[style*="readium-advanced-on"] small {
		font-size: smaller !important;
	}
	
	:root[style*="readium-advanced-on"] sub,
	:root[style*="readium-advanced-on"] sup {
		font-size: 67.5% !important;
	}
	
	/* The following styles kick in if you define the typeScale variable in the DOM. 
		 No need to repeat declarations which don’t make use of the variable */
	
	:root[style*="readium-advanced-on"][style*="--USER__typeScale"] h1 {
		font-size: calc(((1rem * var(--USER__typeScale)) * var(--USER__typeScale)) * var(--USER__typeScale)) !important;
	}
	
	:root[style*="readium-advanced-on"][style*="--USER__typeScale"] h2 {
		font-size: calc((1rem * var(--USER__typeScale)) * var(--USER__typeScale)) !important;
	}
	
	:root[style*="readium-advanced-on"][style*="--USER__typeScale"] h3 {
		font-size: calc(1rem * var(--USER__typeScale)) !important;
	}
	/*# sourceMappingURL=ReadiumCSS-after.css.map */